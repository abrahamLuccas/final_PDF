// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pdf_final.Data;

#nullable disable

namespace pdf_final.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221101182852_Teste")]
    partial class Teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("pdf_final.Models.Curriculo", b =>
                {
                    b.Property<int>("CurriculoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CurriculoId"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CurriculoId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Curriculos", (string)null);
                });

            modelBuilder.Entity("pdf_final.Models.ExperienciaProfissional", b =>
                {
                    b.Property<int>("ExperienciaProfissionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExperienciaProfissionalId"), 1L, 1);

                    b.Property<int>("AnoFim")
                        .HasColumnType("int");

                    b.Property<int>("AnoInicio")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CurriculoId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoAtividades")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NomeEmpresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExperienciaProfissionalId");

                    b.HasIndex("CurriculoId");

                    b.ToTable("ExperienciasProfissionais", (string)null);
                });

            modelBuilder.Entity("pdf_final.Models.FormacaoAcademica", b =>
                {
                    b.Property<int>("FormacaoAcademicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormacaoAcademicaId"), 1L, 1);

                    b.Property<int>("AnoFim")
                        .HasColumnType("int");

                    b.Property<int>("AnoInicio")
                        .HasColumnType("int");

                    b.Property<int>("CurriculoId")
                        .HasColumnType("int");

                    b.Property<string>("Instituicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomeCurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoCursoId")
                        .HasColumnType("int");

                    b.HasKey("FormacaoAcademicaId");

                    b.HasIndex("CurriculoId");

                    b.HasIndex("TipoCursoId");

                    b.ToTable("FormacoesAcademicas", (string)null);
                });

            modelBuilder.Entity("pdf_final.Models.Idioma", b =>
                {
                    b.Property<int>("IdiomaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdiomaId"), 1L, 1);

                    b.Property<int>("CurriculoId")
                        .HasColumnType("int");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdiomaId");

                    b.HasIndex("CurriculoId");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Idiomas", (string)null);
                });

            modelBuilder.Entity("pdf_final.Models.Objetivo", b =>
                {
                    b.Property<int>("ObjetivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjetivoId"), 1L, 1);

                    b.Property<int>("CurriculoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("ObjetivoId");

                    b.HasIndex("CurriculoId");

                    b.ToTable("Objetivos", (string)null);
                });

            modelBuilder.Entity("pdf_final.Models.TipoCurso", b =>
                {
                    b.Property<int>("TipoCursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoCursoId"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoCursoId");

                    b.HasIndex("TipoCursoId")
                        .IsUnique();

                    b.ToTable("TiposCursos");
                });

            modelBuilder.Entity("pdf_final.Models.ExperienciaProfissional", b =>
                {
                    b.HasOne("pdf_final.Models.Curriculo", "Curriculo")
                        .WithMany("ExperienciasProfissionais")
                        .HasForeignKey("CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");
                });

            modelBuilder.Entity("pdf_final.Models.FormacaoAcademica", b =>
                {
                    b.HasOne("pdf_final.Models.Curriculo", "Curriculo")
                        .WithMany("FormacoesAcademicas")
                        .HasForeignKey("CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pdf_final.Models.TipoCurso", "TipoCurso")
                        .WithMany("FormacoesAcademicas")
                        .HasForeignKey("TipoCursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");

                    b.Navigation("TipoCurso");
                });

            modelBuilder.Entity("pdf_final.Models.Idioma", b =>
                {
                    b.HasOne("pdf_final.Models.Curriculo", "Curriculo")
                        .WithMany("Idiomas")
                        .HasForeignKey("CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");
                });

            modelBuilder.Entity("pdf_final.Models.Objetivo", b =>
                {
                    b.HasOne("pdf_final.Models.Curriculo", "Curriculo")
                        .WithMany("Objetivos")
                        .HasForeignKey("CurriculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curriculo");
                });

            modelBuilder.Entity("pdf_final.Models.Curriculo", b =>
                {
                    b.Navigation("ExperienciasProfissionais");

                    b.Navigation("FormacoesAcademicas");

                    b.Navigation("Idiomas");

                    b.Navigation("Objetivos");
                });

            modelBuilder.Entity("pdf_final.Models.TipoCurso", b =>
                {
                    b.Navigation("FormacoesAcademicas");
                });
#pragma warning restore 612, 618
        }
    }
}
